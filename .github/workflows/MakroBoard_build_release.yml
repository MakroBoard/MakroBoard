name: MakroBoard_build_release

on:
  push:
    branches: 
    - main
    - develop
    tags: [ v**]
    paths:
    - '**'
    - '!Docs/**'
    - '!packaging/Docs**'
    - '!README.md'
    - '!.github/workflows/MakroBoard_website_build.yml'
  pull_request:
    branches: 
    - main
    - develop
    tags: [ v**]
    paths:
    - '**'
    - '!Docs/**'
    - '!packaging/Docs**'
    - '!README.md'
    - '!.github/workflows/MakroBoard_website_build.yml'

jobs:

  build_web_client:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.4'
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
    - name: set client version
      run: 'sed -i "s|version: .*$|version: $MAKROBOARDVER|g" pubspec.yaml'
      working-directory: ./makro_board_client
    - name: flutter get dependencies
      working-directory: ./makro_board_client
      run: flutter pub get
    - name: flutter disable analytics
      working-directory: ./makro_board_client
      run: flutter config --no-analytics
    - name: flutter build web
      working-directory: ./makro_board_client
      run: flutter build web
    - name: copy web client
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/web && cp -rf ./makro_board_client/build/web/* upload/web/
    - name: upload artifact web client
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_web_client
        path: upload/
        retention-days: 5
  
  
  
  build_linux_client_x64:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.4'
    - name: install cmake
      uses: jwlawson/actions-setup-cmake@v1.8
      with:
        cmake-version: '3.16'
    - name: Install apt dependencies
      run: sudo apt-get update && sudo apt-get install libidn11 jq curl wget ninja-build clang tar pkg-config cmake-data libblkid-dev libgtk-3-dev liblzma-dev -y
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
    - name: set client version
      run: 'sed -i "s|version: .*$|version: $MAKROBOARDVER|g" pubspec.yaml'
      working-directory: ./makro_board_client
    - name: flutter get dependencies
      working-directory: ./makro_board_client
      run: flutter pub get
    - name: flutter disable analytics
      working-directory: ./makro_board_client
      run: flutter config --no-analytics
    - name: flutter config linux
      working-directory: ./makro_board_client
      run: flutter config --enable-linux-desktop
    - name: flutter build linux
      working-directory: ./makro_board_client
      run: flutter build linux --release
    - name: copy linux client x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/linuxclient_x64 && cp -rf ./makro_board_client/build/linux/release/bundle/* upload/linuxclient_x64/ && cd upload/linuxclient_x64/ && tar cfvz ../linuxclient_x64.tar.gz *
    - name: upload artifact linux client x64
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_linux_client_x64
        path: upload/
        retention-days: 5

  build_linux_client_x64_appimage:
    needs:
    - build_linux_client_x64
    runs-on: ubuntu-latest
    steps:
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_linux_client_x64
    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    - name: GPG user IDs
      run: |
        echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
        echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
        echo "name:        ${{ steps.import_gpg.outputs.name }}"
        echo "email:       ${{ steps.import_gpg.outputs.email }}"
    - name: install appimagekit
      run: wget $(curl -sL https://api.github.com/repos/AppImage/AppImageKit/releases/latest | jq -r '.assets[].browser_download_url' | grep "appimagetool-x86_64.AppImage$") && chmod +x appimagetool-x86_64.AppImage
    - name: prepare appimage linxuclient x64 dir
      run: mkdir -p ./appimage/MakroBoard_client_x64.AppDir &&  cp -rf ./linuxclient_x64/* ./appimage/MakroBoard_client_x64.AppDir/ && cp ./packaging/AppImage/linuxclient_Apprun ./appimage/MakroBoard_client_x64.AppDir/AppRun && chmod +x ./appimage/MakroBoard_client_x64.AppDir/AppRun && cp ./packaging/logo.png ./appimage/MakroBoard_client_x64.AppDir/MakroBoardClient.png && cp ./packaging/AppImage/linuxclient_desktop ./appimage/MakroBoard_client_x64.AppDir/MakroBoard_client_x64.desktop
    - name: build appimage linuxclient x64
      run: ./appimagetool-x86_64.AppImage ./appimage/MakroBoard_client_x64.AppDir/ MakroBoard_client_x64.AppImage --sign -u 'gh-releases-zsync|MakroBoard|MakroBoard|latest|MakroBoard_client_x64.AppImage.zsync'
    - name: copy linux client appimage x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/linuxclient_appimage_x64/ && cp -rf MakroBoard_client_x64.AppImage* upload/linuxclient_appimage_x64/
    - name: upload artifact linux client x64 appimage
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_linux_client_x64_appimage
        path: upload/
        retention-days: 5

  build_linux_host_x64:
    needs:
    - build_web_client
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_web_client
    - name: Display structure of downloaded files
      run: ls -R
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
    - name: set dotnetversionnumber
      run:  echo "MAKROBOARDNETVER=$(echo \"$MAKROBOARDVER\" | sed 's|+|.|g')" >> $GITHUB_ENV
      shell: bash
    - name: Restore dependencies
      run: dotnet restore
    - name: copy web to dotnet
      run: cp -rf ./web/* ./MakroBoard/wwwroot/
    - name: Build linux dotnet
      run: dotnet publish -r linux-x64 -c release --output Release -p:Version=$MAKROBOARDNETVER
    - name: Build global linux dotnet MakroBoard Plugins
      run: cat ./packaging/plugins/global | xargs -I % dotnet publish MakroBoard.Plugin.%/MakroBoard.Plugin.%.csproj -r linux-x64 -c release --output Release/Plugins/MakroBoard.Plugin.% -p:Version=$MAKROBOARDNETVER
    - name: Build linux linux dotnet MakroBoard Plugins
      run: cat ./packaging/plugins/linux | xargs -I % dotnet publish MakroBoard.Plugin.%/MakroBoard.Plugin.%.csproj -r linux-x64 -c release --output Release/Plugins/MakroBoard.Plugin.% -p:Version=$MAKROBOARDNETVER
    - name: copy linux Host x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/linuxhost_x64 && cp -rf ./Release/* upload/linuxhost_x64/ && cd upload/linuxhost_x64/ && tar cfvz ../linuxhost_x64.tar.gz *
    - name: upload artifact linux Host x64
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_linux_host_x64
        path: upload/
        retention-days: 5


  build_linux_host_x64_appimage:
    needs:
    - build_linux_host_x64
    runs-on: ubuntu-latest
    steps:
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_linux_host_x64
    - name: Import GPG key
      id: import_gpg
      uses: crazy-max/ghaction-import-gpg@v3
      with:
        gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
    - name: GPG user IDs
      run: |
        echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
        echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
        echo "name:        ${{ steps.import_gpg.outputs.name }}"
        echo "email:       ${{ steps.import_gpg.outputs.email }}"
    - name: install appimagekit
      run: wget $(curl -sL https://api.github.com/repos/AppImage/AppImageKit/releases/latest | jq -r '.assets[].browser_download_url' | grep "appimagetool-x86_64.AppImage$") && chmod +x appimagetool-x86_64.AppImage
    - name: prepare appimage linxhost x64 dir
      run: mkdir -p ./appimage/MakroBoard_host_x64.AppDir &&  cp -rf ./linuxhost_x64/* ./appimage/MakroBoard_host_x64.AppDir/ && cp ./packaging/AppImage/linuxhost_Apprun ./appimage/MakroBoard_host_x64.AppDir/AppRun && chmod +x ./appimage/MakroBoard_host_x64.AppDir/AppRun && cp ./packaging/logo.png ./appimage/MakroBoard_host_x64.AppDir/MakroBoardHost.png && cp ./packaging/AppImage/linuxhost_desktop ./appimage/MakroBoard_host_x64.AppDir/MakroBoard_host_x64.desktop
    - name: build appimage linuxhost x64
      run: ./appimagetool-x86_64.AppImage ./appimage/MakroBoard_host_x64.AppDir/ MakroBoard_host_x64.AppImage --sign -u 'gh-releases-zsync|MakroBoard|MakroBoard|latest|MakroBoard_host_x64.AppImage.zsync'
    - name: copy linux host appimage x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/linuxhost_appimage_x64/ && cp -rf MakroBoard_host_x64.AppImage* upload/linuxhost_appimage_x64/
    - name: upload artifact linux Host x64 appimage
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_linux_host_x64_appimage
        path: upload/
        retention-days: 5


  build_android_client:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.4'
    - name: install java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: install Android SDK
      uses: android-actions/setup-android@v2
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
    - name: set client version
      run: 'sed -i "s|version: .*$|version: $MAKROBOARDVER|g" pubspec.yaml'
      working-directory: ./makro_board_client
    - name: flutter get dependencies
      working-directory: ./makro_board_client
      run: flutter pub get
    - name: flutter disable analytics
      working-directory: ./makro_board_client
      run: flutter config --no-analytics
    - name: flutter build android client
      working-directory: ./makro_board_client
      run: flutter build apk --release
    - name: copy android client
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/android && cp -rf ./makro_board_client/build/app/outputs/flutter-apk/* upload/android/
    - name: upload artifact android client
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_android_client
        path: upload/
        retention-days: 5


  build_windows_client_x64:
    runs-on: windows-2019
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install flutter
      uses: actions/checkout@v2
      with:
        repository: flutter/flutter
        ref: master
        path: flutter
        fetch-depth: 0
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set client version
      run: 'sed -i "s|version: .*$|version: $MAKROBOARDVER|g" pubspec.yaml'
      working-directory: ./makro_board_client
      shell: bash
    - name: Add flutter to path
      run: echo "$env:GITHUB_WORKSPACE\flutter\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Add Flutter tags
      run: git fetch origin +refs/tags/*:refs/tags/*
      working-directory: ${{ github.workspace }}/flutter
    - name: flutter config windows
      working-directory: ${{ github.workspace }}\makro_board_client
      run: flutter config --enable-windows-desktop
    - name: flutter get dependencies
      working-directory: ${{ github.workspace }}\makro_board_client
      run: flutter pub get
    - name: flutter disable analytics
      working-directory: ${{ github.workspace }}\makro_board_client
      run: flutter config --no-analytics
    - name: flutter build windows
      working-directory: ${{ github.workspace }}\makro_board_client
      run: flutter build windows --release
    - name: copy windows client x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: New-Item -ItemType Directory -Path $($env:GITHUB_WORKSPACE + "\upload\windowsclient_x64") && Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\makro_board_client\build\windows\runner\Release\*") -Destination $($env:GITHUB_WORKSPACE + "\upload\windowsclient_x64\")
    - name: upload artifact windows client x64
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_windows_client_x64
        path: upload/
        retention-days: 5

  build_windows_client_x64_msi:
    runs-on: windows-2019
    needs:
    - build_windows_client_x64
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_windows_client_x64
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: install Wix
      run: Invoke-WebRequest -Uri $($($(Invoke-WebRequest -Uri https://api.github.com/repos/wixtoolset/wix3/releases/latest).Content | ConvertFrom-Json).assets | Where-Object {$_.browser_download_url -Like "*wix*-binaries.zip"}).browser_download_url -OutFile "wix.zip" && Expand-Archive ./wix.zip && Remove-Item ./wix.zip
    - name: Add wix to path 
      run: echo "$env:GITHUB_WORKSPACE\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set dotnetversionnumber
      run:  echo "MAKROBOARDNETVER=$(echo $MAKROBOARDVER | sed 's|+|.|g')" >> $GITHUB_ENV
      shell: bash   
    - name: set client msi version
      run: sed -i "s|Version=\".*\" M|Version=\"$MAKROBOARDNETVER\" M|g" Product.wxs
      working-directory: ./MakroBoardClient.Setup
      shell: bash
    - name: copy windows client bin
      run: New-Item -ItemType Directory -Path $($env:GITHUB_WORKSPACE + "\makro_board_client\build\windows\runner\Release") && Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\windowsclient_x64\*") -Destination $($env:GITHUB_WORKSPACE + "\makro_board_client\build\windows\runner\Release\")
    - name: Build windows Client x64 MSI
      run: msbuild /property:Configuration=Release
      working-directory: ${{ github.workspace }}\MakroBoardClient.Setup
      env:
          WIX: ${{ github.workspace }}\wi
    - name: copy windows client x64 msi
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: New-Item -ItemType Directory -Path $($env:GITHUB_WORKSPACE + "\upload\windowsclient_x64_msi") && Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\MakroBoardClient.Setup\bin\Release\*.msi") -Destination $($env:GITHUB_WORKSPACE + "\upload\windowsclient_x64_msi\")
    - name: upload artifact windows client x64 msi
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_windows_client_x64_msi
        path: upload/
        retention-days: 5

  build_windows_host_x64:
    runs-on: windows-2019
    needs:
    - build_web_client
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_web_client
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set dotnetversionnumber
      run:  echo "MAKROBOARDNETVER=$(echo $MAKROBOARDVER | sed 's|+|.|g')" >> $GITHUB_ENV
      shell: bash   
    - name: copy web to dotnet
      run: Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\web\*") -Destination $($env:GITHUB_WORKSPACE + "\MakroBoard\wwwroot\")
    - name: Restore dependencies
      run: dotnet restore
    - name: Build Windows dotnet MakroBoard
      run: dotnet publish MakroBoard\MakroBoard.csproj -r win-x64 -c release --output Release -p:Version=$ENV:MAKROBOARDNETVER 
    - name: Build global Windows dotnet MakroBoard Plugins
      run: Get-Content $($env:GITHUB_WORKSPACE + "\packaging\plugins\global") | ForEach-Object {Start-Process -FilePath "dotnet" -ArgumentList "publish MakroBoard.Plugin.$_\MakroBoard.Plugin.$_.csproj -r win-x64 -c release --output Release\Plugins\MakroBoard.Plugin.$_ -p:Version=$ENV:MAKROBOARDNETVER" } 
    - name: Build windows Windows dotnet MakroBoard Plugins
      run: Get-Content $($env:GITHUB_WORKSPACE + "\packaging\plugins\windows") | ForEach-Object {Start-Process -FilePath "dotnet" -ArgumentList "publish MakroBoard.Plugin.$_\MakroBoard.Plugin.$_.csproj -r win-x64 -c release --output Release\Plugins\MakroBoard.Plugin.$_ -p:Version=$ENV:MAKROBOARDNETVER" }
    - name: copy windows host x64 
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: New-Item -ItemType Directory -Path $($env:GITHUB_WORKSPACE + "\upload\windowshost_x64") && Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\Release\*") -Destination $($env:GITHUB_WORKSPACE + "\upload\windowshost_x64\")
    - name: upload artifact windows client x64 msi
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_windows_host_x64
        path: upload/
        retention-days: 5

  build_windows_host_x64_msi:
    runs-on: windows-2019
    needs:
    - build_windows_host_x64
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_windows_host_x64
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2
    - name: install .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: install Wix
      run: Invoke-WebRequest -Uri $($($(Invoke-WebRequest -Uri https://api.github.com/repos/wixtoolset/wix3/releases/latest).Content | ConvertFrom-Json).assets | Where-Object {$_.browser_download_url -Like "*wix*-binaries.zip"}).browser_download_url -OutFile "wix.zip" && Expand-Archive ./wix.zip && Remove-Item ./wix.zip
    - name: Add wix to path 
      run: echo "$env:GITHUB_WORKSPACE\wix" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | sed 's|refs/heads/||g' | sed 's|refs/tags/v||g' | sed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set dotnetversionnumber
      run:  echo "MAKROBOARDNETVER=$(echo $MAKROBOARDVER | sed 's|+|.|g')" >> $GITHUB_ENV
      shell: bash   
    - name: set host msi version
      run: sed -i "s|Version=\".*\" M|Version=\"$MAKROBOARDNETVER\" M|g" Product.wxs
      working-directory: ./MakroBoard.Setup 
      shell: bash
    - name: copy windows host bin
      run: New-Item -ItemType Directory -Path $($env:GITHUB_WORKSPACE + "\Release") && Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\windowshost_x64\*") -Destination $($env:GITHUB_WORKSPACE + "\Release\")
    - name: Build Host x64 MSI dotnet
      run: msbuild /property:Configuration=Release
      working-directory: ${{ github.workspace }}\MakroBoard.Setup
      env:
          WIX: ${{ github.workspace }}\wix
    - name: copy windows host x64 msi
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: New-Item -ItemType Directory -Path $($env:GITHUB_WORKSPACE + "\upload\windowshost_x64_msi") && Copy-Item -Recurse -Path $($env:GITHUB_WORKSPACE + "\MakroBoard.Setup\bin\Release\*.msi") -Destination $($env:GITHUB_WORKSPACE + "\upload\windowshost_x64_msi\")
    - name: upload artifact windows host x64 msi
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_windows_host_x64_msi
        path: upload/
        retention-days: 5


  build_ios_client:
    runs-on: macos-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.4'
    - name: install java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: install gsed
      run: brew install gnu-sed
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | gsed 's|refs/heads/||g' | gsed 's|refs/tags/v||g' | gsed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set client version
      run: 'gsed -i "s|version: .*$|version: $MAKROBOARDVER|g" pubspec.yaml'
      working-directory: ./makro_board_client
      shell: bash
    - name: flutter get dependencies
      working-directory: ./makro_board_client
      run: flutter pub get
    - name: flutter disable analytics
      working-directory: ./makro_board_client
      run: flutter config --no-analytics
    - name: flutter build ios
      working-directory: ./makro_board_client
      run: flutter build ios --release --no-codesign
    - name: copy ios client
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/ios && cp -rf ./makro_board_client/build/ios/* upload/ios/
    - name: upload artifact ios client
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_ios_client
        path: upload/
        retention-days: 5
    
  build_macos_client_x64:
    runs-on: macos-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: install flutter
      uses: subosito/flutter-action@v1
      with:
        flutter-version: '2.0.4'
    - name: install java
      uses: actions/setup-java@v1
      with:
        java-version: '12.x'
    - name: install gsed
      run: brew install gnu-sed
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | gsed 's|refs/heads/||g' | gsed 's|refs/tags/v||g' | gsed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set client version
      run: 'gsed -i "s|version: .*$|version: $MAKROBOARDVER|g" pubspec.yaml'
      working-directory: ./makro_board_client
      shell: bash
    - name: flutter get dependencies
      working-directory: ./makro_board_client
      run: flutter pub get
    - name: flutter disable analytics
      working-directory: ./makro_board_client
      run: flutter config --no-analytics
    - name: flutter config macos
      working-directory: ./makro_board_client
      run: flutter config --enable-macos-desktop
    - name: flutter build macos
      working-directory: ./makro_board_client
      run: flutter build macos --release
    - name: copy macos client x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/macosclient_x64 && cp -rf ./makro_board_client/build/macos/Build/Products/Release/* upload/macosclient_x64/
    - name: upload artifact macos client x64
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_macos_client_x64
        path: upload/
        retention-days: 5


  build_macos_host_x64:
    runs-on: macos-latest
    needs:
    - build_web_client
    steps:
    - name: checkout
      uses: actions/checkout@v2
    - name: get artifacts
      uses: actions/download-artifact@v2
      with:
        name: latest_web_client
    - name: install gsed
      run: brew install gnu-sed
    - name: set Version
      if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=$(echo ${GITHUB_REF} | gsed 's|refs/heads/||g' | gsed 's|refs/tags/v||g' | gsed 's|-beta||g' )" >> $GITHUB_ENV  
      shell: bash
    - name: set Version
      if: ${{ !(startsWith(github.ref, 'refs/tags/v')) }}
      run:  echo "MAKROBOARDVER=1.0.0+1" >> $GITHUB_ENV  
      shell: bash
    - name: set dotnetversionnumber
      run:  echo "MAKROBOARDNETVER=$(echo $MAKROBOARDVER | gsed 's|+|.|g')" >> $GITHUB_ENV
      shell: bash   
    - name: copy web to dotnet
      run: cp -rf ./web/* ./MakroBoard/wwwroot/
    - name: Restore dependencies
      run: dotnet restore
    - name: Build macos host x64 dotnet
      run: dotnet publish -r osx-x64 -c release  --output Release -p:Version=$MAKROBOARDNETVER
    - name: Build global macos host x64 dotnet MakroBoard Plugins
      run: cat ./packaging/plugins/global | xargs -I % dotnet publish MakroBoard.Plugin.%/MakroBoard.Plugin.%.csproj -r osx-x64 -c release --output Release/Plugins/MakroBoard.Plugin.% -p:Version=$MAKROBOARDNETVER
      shell: bash
    - name: Build macos macos host x64 dotnet MakroBoard Plugins
      run: cat ./packaging/plugins/macos | xargs -I % dotnet publish MakroBoard.Plugin.%/MakroBoard.Plugin.%.csproj -r osx-x64 -c release --output Release/Plugins/MakroBoard.Plugin.% -p:Version=$MAKROBOARDNETVER
      shell: bash
    - name: copy macos host x64
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) }}
      run: mkdir -p upload/macoshost_x64 && cp -rf ./Release/* upload/macoshost_x64/ && cd upload/macoshost_x64/ && tar cfvz ../macoshost_x64.tar.gz *
    - name: upload artifact macos host x64
      uses: actions/upload-artifact@v2
      #if: ${{ (startsWith(github.ref, 'refs/tags/v')) && !(env.ACT) }}
      with:
        name: latest_macos_host_x64
        path: upload/
        retention-days: 5


  release:
     name: Release
     #if: ${{ startsWith(github.ref, 'refs/tags/v') }}
     needs:
     - build_linux_host_x64
     - build_linux_host_x64_appimage
     - build_linux_client_x64
     - build_linux_client_x64_appimage
     - build_android_client
     - build_ios_client
     - build_windows_client_x64
     - build_windows_client_x64_msi
     - build_windows_host_x64
     - build_windows_host_x64_msi
     - build_macos_client_x64
     - build_macos_host_x64
     runs-on: ubuntu-latest
     steps:
     - name: get artifacts
       uses: actions/download-artifact@v2
     - name: Display structure of downloaded files
       run: ls -R